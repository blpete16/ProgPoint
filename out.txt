nv = {"GLOBAL:force", "int", &force, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:no_name", "int", &no_name, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:no_time", "int", &no_time, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:recursive", "int", &recursive, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:list", "int", &list, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:verbose", "int", &verbose, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:quiet", "int", &quiet, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:do_lzw", "int", &do_lzw, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:test", "int", &test, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:foreground;", "int", &foreground;, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:*progname;", "char", &*progname;, sizeof(char)};
writeValue(nv, stateFile);
nv = {"GLOBAL:maxbits", "int", &maxbits, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:method", "int", &method, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:level", "int", &level, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:exit_code", "int", &exit_code, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:save_orig_name;", "int", &save_orig_name;, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:last_member;", "int", &last_member;, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:part_nb;", "int", &part_nb;, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:time_stamp;", "long", &time_stamp;, sizeof(long)};
writeValue(nv, stateFile);
nv = {"GLOBAL:ifile_size;", "long", &ifile_size;, sizeof(long)};
writeValue(nv, stateFile);
nv = {"GLOBAL:*env;", "char", &*env;, sizeof(char)};
writeValue(nv, stateFile);
nv = {"GLOBAL:**args", "char", &**args, sizeof(char)};
writeValue(nv, stateFile);
nv = {"GLOBAL:z_suffix[MAX_SUFFIX+1];", "char", &z_suffix[MAX_SUFFIX+1];, sizeof(char)};
writeValue(nv, stateFile);
nv = {"GLOBAL:z_len;", "int", &z_len;, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:bytes_in;", "long", &bytes_in;, sizeof(long)};
writeValue(nv, stateFile);
nv = {"GLOBAL:bytes_out;", "long", &bytes_out;, sizeof(long)};
writeValue(nv, stateFile);
nv = {"GLOBAL:total_in", "long", &total_in, sizeof(long)};
writeValue(nv, stateFile);
nv = {"GLOBAL:total_out", "long", &total_out, sizeof(long)};
writeValue(nv, stateFile);
nv = {"GLOBAL:ifname[MAX_PATH_LEN];", "char", &ifname[MAX_PATH_LEN];, sizeof(char)};
writeValue(nv, stateFile);
nv = {"GLOBAL:ofname[MAX_PATH_LEN];", "char", &ofname[MAX_PATH_LEN];, sizeof(char)};
writeValue(nv, stateFile);
nv = {"GLOBAL:remove_ofname", "int", &remove_ofname, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:stat", "struct", &stat, sizeof(struct)};
writeValue(nv, stateFile);
nv = {"GLOBAL:ifd;", "int", &ifd;, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:ofd;", "int", &ofd;, sizeof(int)};
writeValue(nv, stateFile);
nv = {"GLOBAL:insize;", "unsigned", &insize;, sizeof(unsigned)};
writeValue(nv, stateFile);
nv = {"GLOBAL:inptr;", "unsigned", &inptr;, sizeof(unsigned)};
writeValue(nv, stateFile);
nv = {"GLOBAL:outcnt;", "unsigned", &outcnt;, sizeof(unsigned)};
writeValue(nv, stateFile);
